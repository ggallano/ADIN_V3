<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:local="clr-namespace:ADIN.WPF.Themes">
    <!--<Style x:Key="ButtonStyle" TargetType="{x:Type telerik:RadButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource button.secondary.hover.foreground}"/>
                <Setter Property="Background" Value="{StaticResource button.secondary.hover.background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource button.secondary.hover.foreground}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.IsEnable.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsEnable.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsEnable.BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}" Name="button" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource button.secondary.background}" />
        <Setter Property="BorderBrush" Value="{StaticResource button.secondary.borderbrush}"/>
        <Setter Property="Foreground" Value="{StaticResource button.secondary.foreground}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="FontFamily" Value="Barlow"/>
    </Style>-->
    
    <!--Flat Style-->
    <Style x:Key="ButtonStyle" TargetType="{x:Type telerik:RadButton}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="{StaticResource button.secondary.background}" />
        <Setter Property="Foreground" Value="{StaticResource button.secondary.foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource button.secondary.borderbrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="FontFamily" Value="Barlow"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource button.secondary.hover.foreground}"/>
                <Setter Property="Background" Value="{StaticResource button.secondary.hover.background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource button.secondary.hover.borderbrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource button.secondary.hover.foreground}"/>
                <Setter Property="FontWeight" Value="Light"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.IsEnable.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsEnable.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsEnable.BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TelerikButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}"/>
    <Style x:Key="TestModeTelerikButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Margin" Value="0 4"/>
        <Setter Property="Width" Value="125"/>
    </Style>
    <Style x:Key="ResetPhyButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource TelerikButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource buttonReset.foreground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource buttonReset.borderbrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource buttonReset.hover.foreground}"/>
                <Setter Property="Background" Value="{StaticResource buttonReset.hover.background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource buttonReset.hover.borderbrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource buttonReset.isPressed.foreground}"/>
                <Setter Property="Background" Value="{StaticResource buttonReset.isPressed.background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource buttonReset.isPressed.borderbrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FramGenButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Margin" Value="0 4"/>
        <!--<Setter Property="Height" Value="32"/>-->
    </Style>
    <Style x:Key="AdiLogoStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource hmc.color.logo.default}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Path x:Name="ButtonPath" Margin="0" Stretch="Uniform" Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="1.3" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Fill="{TemplateBinding Foreground}"
                                      VerticalAlignment="Top" HorizontalAlignment="Center" Width="150" Height="50" 
                                      Data="M122.41,244.72V123.51H243V244.72Zm24.81-102.34v87l75.59-44.45ZM283.55,243.43H262.74v-54h20.94c15.5,0,24.81,12.28,24.81,27.92S300.22,243.43,283.55,243.43ZM302,177.14l-4.14-12H278l-3.62,12H263.52L281.74,123h11l20.42,54.14Zm-19.39,21.45h-8.53V235h9.18c12.14,0,13.95-10.34,13.82-18.22C297.11,210.61,294.14,198.59,282.64,198.59Zm11.5-44.32-6.85-19.9-6.07,19.77-.39,3.36h13.44A11.64,11.64,0,0,0,294.14,154.27Zm18.22,89.16v-54h39.8v9.05H323.22V210H348.8v9.82H323.35v14.47h29.72v9.18Zm37.48-66.29-23.78-36.57v36.57H315.21V123h11.11l22.87,36.05V123h10.86v54.14Zm34,66.16H373.48l-17.83-51v-2.85h10.86L378.65,229l11.89-39.41h10.6v2.84ZM401,177.14l-4.14-12H377l-3.61,12H362.5L380.72,123h11l20.42,54.14Zm-7.76-22.61-6.84-20.42-6.85,20.42v3h13.95A8.39,8.39,0,0,0,393.25,154.53ZM404.5,243.3V189.55H416V243.3Zm9.95-66.16V123h10.72v45h24.17v9.18Zm30.11,67.58c-29.6.65-34.76-56.47.12-56.08,19.39,0,22.75,16.15,23.52,18.61H457.48c-1.68-3.36-6.08-9.82-11.5-10.21-19.13-1.29-19.13,39.15,0,39.15,9.17,0,11.37-9.17,11.88-10.2h10.47C468.33,226.11,467,244.46,444.56,244.72ZM474.28,178c-34.76,0-33.47-56.08.38-55.82C507.36,122.48,508.26,178,474.28,178Zm-.39-9c20,.13,20-37.35.39-37.6S454.12,168.87,473.89,169Zm-3.62,74.43v-54h38.38v9.83h-28v11.11h24.81V220H480.74v14.21h29.2v9.18Zm72.88-67.58v-5.17c-1.16,1-6.33,7.62-16,7.36-33.08-.77-33.21-55,1.55-55.69a23.91,23.91,0,0,1,18.09,9.05,17.16,17.16,0,0,1,3.62,8.78h-9.18c-2.07-3.36-5.29-9-12.92-9-20.16-.26-21.45,37.86-.13,38.25,9.44.25,14.21-9.57,14.21-9.7v-2.84H529.45v-8.4h22.23v27.4Zm-10.08,69c-22.87,0-22.61-17.57-22.61-17.57H520.8s-.78,8.53,10.72,9.3c2.84.13,12.15-1,12.15-7.49,0-7.5-9.43-7.11-15.38-8.79s-17.19-4.14-17.19-14.6c0-9.18,7.5-17.06,22-17.06,19.38.13,19.26,15.12,19.38,16h-10c-.64-2.19-1.29-7.49-9.94-7.75-4.27,0-10.73,1.42-10.73,6.46,0,6.33,7.24,7.24,14.86,8.4,11.5,2.2,18.09,5.69,17.7,16.28C554.13,237.36,545.86,244.85,533.07,244.85Z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="TelerikRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Background" Value="{StaticResource button.secondary.background}" />
        <Setter Property="BorderBrush" Value="{StaticResource button.secondary.borderbrush}"/>
        <Setter Property="Foreground" Value="{StaticResource button.secondary.foreground}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="FontFamily" Value="Barlow"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadRadioButton}">
                    <Border CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" Name="button" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <!--<Border BorderThickness="1,0,1,1" BorderBrush="Black" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>-->
                            <!--<ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}"></ContentPresenter>-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource button.secondary.hover.foreground}"/>
                <Setter Property="Background" Value="{StaticResource button.secondary.hover.background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource button.secondary.hover.borderbrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{StaticResource button.secondary.isPressed.foreground}"/>
                <Setter Property="FontWeight" Value="Light"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{StaticResource button.secondary.isChecked.foreground}"/>
                <Setter Property="Background" Value="{StaticResource button.secondary.isChecked.background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource button.secondary.isChecked.borderbrush}"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.IsEnable.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsEnable.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsEnable.BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}" BasedOn="{StaticResource TelerikRadioButtonStyle}">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="SegmentedLeftRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}" BasedOn="{StaticResource TelerikRadioButtonStyle}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="4, 0, 0, 4"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="Foreground" Value="{StaticResource Button.IsEnable.Foreground}"/>
                <Setter Property="Background" Value="Value"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsEnable.BorderBrush}"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SegmentedRightRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}" BasedOn="{StaticResource TelerikRadioButtonStyle}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="CornerRadius" Value="0, 4, 4, 0"/>
    </Style>
    <Style x:Key="ClockPinRadioButtonStyle" TargetType="{x:Type telerik:RadRadioButton}" BasedOn="{StaticResource TelerikRadioButtonStyle}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="5 5"/>
    </Style>


    <Style x:Key="ToggleFlatStyle" TargetType="{x:Type telerik:RadToggleButton}">
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource Button.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik:RadToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Button.IsMouseOver.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsMouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsMouseOver.BorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.IsEnable.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsEnable.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsEnable.BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleStyle" TargetType="{x:Type telerik:RadToggleButton}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.BorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource Button.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="8" Background="{TemplateBinding Background}" Name="button">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter TextBlock.FontSize="{TemplateBinding FontSize}" TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Button.IsMouseOver.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsMouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsMouseOver.BorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.IsEnable.Foreground}"/>
                <Setter Property="Background" Value="{StaticResource Button.IsEnable.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.IsEnable.BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActiveLinkSetButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="20"/>
    </Style>
    
    <!--Cable Diagnostics-->
    <Style x:Key="FaultDetectorSaveButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="ToolTip" Value="Save Calibration"/>
        <Setter Property="Padding" Value="10 5 0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <StackPanel Orientation="Horizontal">
                                <Path Stretch="Fill" Fill="{TemplateBinding Foreground}" Margin="10 5 0 5" Width="20" Height="20">
                                    <Path.Data>
                                        <PathGeometry Figures="M32.667,136.16667 L32.667,254.83366 238.66733,254.83366 238.66733,136.16667 z M152.16734,22.167 L180.16734,22.167 180.16734,92.166992 152.16734,92.166992 z M50.167008,14.5 L50.167008,102.167 204.16737,102.167 204.16737,14.5 z M0.5,0.5 L212.91499,0.5 268.83334,56.512142 268.83334,268.83365 0.5,268.83365 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <TextBlock Grid.Column="1" Text="Save" HorizontalAlignment="Center" Margin="5 7 0 5"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FaultDetectorLoadButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource TelerikButtonStyle}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="ToolTip" Value="Load Calibration"/>
        <Setter Property="Padding" Value="10 5 0 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Name="button">
                        <Grid>
                            <Border BorderThickness="1,0,1,1" BorderBrush="Black" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <Border BorderThickness="0,1,0,0" BorderBrush="White" Margin="2" Opacity="0.7" CornerRadius="{Binding ElementName=button, Path=CornerRadius}">
                                <Border.Effect>
                                    <BlurEffect Radius="2" KernelType="Gaussian"/>
                                </Border.Effect>
                            </Border>
                            <StackPanel Orientation="Horizontal">
                                <Path Stretch="Fill" Fill="{TemplateBinding Foreground}" Margin="10 5 0 5" Width="20" Height="20">
                                    <Path.Data>
                                        <PathGeometry Figures="M0.5,200.83267 L42.833096,200.83267 42.833096,267.83267 331.83524,267.83267 331.83524,200.83267 374.16837,200.83267 374.16837,267.83267 374.16837,310.16567 331.83524,310.16567 42.833096,310.16567 0.5,310.16567 0.5,267.83267 z M146.91634,0.5 L227.75101,0.5 227.75101,141.66301 268.16833,141.66301 187.33366,222.49767 106.499,141.66301 146.91634,141.66301 z" FillRule="NonZero"/>
                                    </Path.Data>
                                </Path>
                                <TextBlock Grid.Column="1" Text="Load" HorizontalAlignment="Center" Margin="5 7 0 5"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FaultDetectorCalibrateButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="70"/>
    </Style>

    <Style x:Key="FaultDetectorOkButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="FaultDetectorStartButtonStyle" TargetType="{x:Type telerik:RadButton}" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Width" Value="103"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
    </Style>
    <!--Cable Diagnostics-->
</ResourceDictionary>